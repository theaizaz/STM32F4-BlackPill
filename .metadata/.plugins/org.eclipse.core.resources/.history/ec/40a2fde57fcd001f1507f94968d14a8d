/*
 * ina226.h
 *
 *  Created on: Jan 6, 2025
 *      Author: aizaz
 */

#ifndef INC_INA226_H_
#define INC_INA226_H_

/* libraries */
#include "main.h"
#include <string.h>

/* Macros */


/* extern's */
extern I2C_HandleTypeDef hi2c1;
extern UART_HandleTypeDef huart1;


/* registers */
uint8_t INA226_ADDRESS         				= {0x40<<1}; 			// INA226 I2C address
uint8_t INA226_CONF_REG        				= {0x00}; 			//Configuration Register
uint8_t INA226_SHUNT_REG       				= {0x01}; 			//Shunt Voltage Register
uint8_t INA226_BUS_REG         				= {0x02}; 			//Bus Voltage Register
uint8_t INA226_PWR_REG         				= {0x03}; 			//Power Register
uint8_t INA226_CURRENT_REG     				= {0x04}; 			//Current flowing through Shunt
uint8_t INA226_CAL_REG         				= {0x05}; 			//Calibration Register
uint8_t INA226_MASK_EN_REG     				= {0x06}; 			//Mask/Enable Register
uint8_t INA226_ALERT_LIMIT_REG 				= {0x07}; 			//Alert Limit Register
uint8_t INA226_MAN_ID_REG      				= {0xFE}; 			//Contains Unique Manbufacturer Identification Number
uint8_t INA226_ID_REG          				= {0xFF}; 			//Contains unique ID

/* parameters, flag bits */
uint16_t INA226_RST       					= {0x8000}; 		//Reset
uint16_t INA226_AFF       					= {0x0010}; 		//Alert function flag
uint16_t INA226_CVRF      					= {0x0008}; 		//Conversion ready flag
uint16_t INA226_OVF       					= {0x0004}; 		//Overflow flags
uint16_t INA226_ALERT_POL 					= {0x0002}; 		//Alert pin polarity - if set then active-high
//Latch enable - if set then alert flag remains until mask/enable register is read
//if not set then flag is cleared after next conversion within limits
uint16_t INA226_LATCH_EN  					= {0x0001};


/*
 * functions
 * */

#endif /* INC_INA226_H_ */
